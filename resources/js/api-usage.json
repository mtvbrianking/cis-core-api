{
    "swagger": "2.0",
    "schemes": [
        "http"
    ],
    "host": "/cis-core-api",
    "basePath": "/v1",
    "info": {
        "description": "API usage documentation",
        "version": "1.0.0",
        "title": "CIS CORE API",
        "termsOfService": "https://github.com/mtvbrianking/cis-core-api/blob/master/readme.md",
        "contact": {
            "url": "https://github.com/mtvbrianking/cis-core-api"
        },
        "x-logo": {
            "url": "#"
        },
        "license": {
            "name": "None",
            "url": "#"
        }
    },
    "externalDocs": {
        "description": "Source code documentation",
        "url": "https://mtvbrianking.github.io/cis-core-api"
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about user"
        },
        {
            "name": "oauth",
            "description": "Operations about OAuth"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Resources",
            "tags": [
                "user",
                "oauth"
            ]
        }
    ],
    "securityDefinitions": {
        "client credentials grant": {
            "description": "Get access to data while protecting your account credentials.",
            "type": "oauth2",
            "flow": "client",
            "tokenUrl": "http://localhost:8000/api/v1/oauth/token",
            "scopes": {
            }
        },
        "authorization code grant": {
            "description": "Get access to data while protecting your account credentials.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "http://localhost:8000/api/v1/oauth/authorize",
            "tokenUrl": "http://localhost:8000/api/v1/oauth/token",
            "scopes": {
            }
        },
        "password grant": {
            "description": "First party apps only.",
            "type": "oauth2",
            "flow": "client",
            "tokenUrl": "http://localhost:8000/api/v1/oauth/token",
            "scopes": {
                "scope": "Scope description.",
            }
        },
        "person_access_token": {
            "description": "You can use a [personal access](http://localhost:8000/clients) token for testing."
        }
    },
    "x-servers": [
        {
            "url": "//localhost:8000/api/v1",
            "description": "Live server"
        },
        {
            "url": "//localhost:8000/api/v1/sandbox",
            "description": "Sandbox server"
        }
    ],
    "paths": {
        "/users/auth": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Authenticate user",
                "description": "Only available for <code>client credentials grant</code> client apps",
                "operationId": "authUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Verified user account email address",
                        "required": true,
                        "type": "string",
                        "example": "jdoe@example.com"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Plain text user account password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X POST \\\n http:\/\/localhost:8000\/api\/v1\/users\/auth \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}' \\\n -H 'content-type: multipart\/form-data' \\\n -F 'email=jdoe@example.com' \\\n -F 'password=S&jPc-6%'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "examples": {
                            "application/json": {
                                "message": "Unauthenticated."
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "examples": {
                            "application/json": {
                                "message": "Insufficient Permission."
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessibile entity",
                        "examples": {
                            "application/json": {
                                "message": "The given data was invalid.",
                                "errors": {
                                    "email": [
                                        "The email field is required."
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register user",
                "description": "Only available for <code>client credentials grant</code> client apps.",
                "operationId": "registerUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Full name",
                        "required": true,
                        "type": "string",
                        "example": "John Doe"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email address",
                        "required": true,
                        "type": "string",
                        "example": "jdoe@example.com"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Having at least; \n+ 8 characters, \n+ an upper case letter, \n+ a lower case letter, \n+ a number and, \n+ a symbol.",
                        "required": true,
                        "type": "string",
                        "pattern": "(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$",
                        "example": "S&jPc-6%"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "description": "Password confirmation",
                        "required": true,
                        "type": "string"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X POST \\\n http:\/\/localhost:8000\/api\/v1\/users \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}' \\\n -H 'content-type: multipart\/form-data' \\\n -F 'name=John Doe' \\\n -F 'email=jdeo@example.com' \\\n -F 'password=S&jPc-6%' \\\n -F 'password_confirmation=S&jPc-6%'"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "examples": {
                            "application/json": {
                                "id": "c19df45f-0ce4-49fb-8cb2-4b5d2fa8b550",
                                "name": "John Doe",
                                "email": "jdoe@example.com",
                                "updated_at": "2018-10-18 11:41:06",
                                "created_at": "2018-10-18 11:41:06"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessibile entity",
                        "examples": {
                            "application/json": {
                                "message": "The given data was invalid.",
                                "errors": {
                                    "name": [
                                        "The name has already been taken."
                                    ],
                                    "email": [
                                        "The email has already been taken."
                                    ],
                                    "password": [
                                        "The password confirmation does not match."
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get users",
                "description": "Get all users data",
                "operationId": "getUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X GET \\\n http:\/\/localhost:8000\/api\/v1\/users \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "users": [
                                    {
                                        "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                        "name": "jdoe",
                                        "email": "jdoe@example.com",
                                        "email_verified_at": "2018-10-14 12:42:30",
                                        "created_at": "2018-10-14 12:42:31",
                                        "updated_at": "2018-10-14 12:42:31",
                                        "deleted_at": null
                                    },
                                    {
                                        "id": "e1b26e3b-2a02-4ad1-9842-7bf6f0484128",
                                        "name": "Tester",
                                        "email": "tester@example.com",
                                        "email_verified_at": null,
                                        "created_at": "2018-10-18 10:04:06",
                                        "updated_at": "2018-10-18 10:04:06",
                                        "deleted_at": null
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user",
                "description": "Get a single user's data",
                "operationId": "getUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X GET \\\n http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26 \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                "name": "jdoe",
                                "email": "jdoe@example.com",
                                "email_verified_at": "2018-10-14 12:42:30",
                                "created_at": "2018-10-14 12:42:31",
                                "updated_at": "2018-10-14 12:42:31",
                                "deleted_at": null
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "description": "Update user data. \\\nCan't change/update user password. \\\nSee <a href='#operation/updateUserProfile'>Update user profile</a> \\\n<strong>Note</strong>: Content-Type: `application/x-www-form-urlencoded`. \\\n Or use [form method spoofing](https://laravel.com/docs/master/routing#form-method-spoofing)",
                "operationId": "updateUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Full name",
                        "required": false,
                        "type": "string",
                        "example": "John Doe"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email address",
                        "required": false,
                        "type": "string",
                        "format": "email",
                        "example": "jdoe@example.com"
                    },
                    {
                        "name": "email_verified_at",
                        "in": "formData",
                        "description": "When the user verified their account (using email link).",
                        "required": false,
                        "type": "datetime",
                        "format": "Y-M-D h:i:s",
                        "example": "2018-10-18 16:36:04"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X PUT \\\n http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26 \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}' \\\n -H 'Content-Type: application\/x-www-form-urlencoded' \\\n -d 'name=Jane Doe' \\\n -d 'email=jdoe@example.com'"
                    },
                    {
                        "lang": "CURL - Spoofed",
                        "source": "curl -X POST \\\n http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26 \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}' \\\n -H 'content-type: multipart\/form-data' \\\n -F '_method=put' \\\n -F 'name=Jane Doe' \\\n -F 'email=jdoe@example.com'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                "name": "Jane Doe",
                                "email": "jdoe@example.com",
                                "email_verified_at": "2018-10-14 12:42:30",
                                "created_at": "2018-10-14 12:42:31",
                                "updated_at": "2018-10-18 12:13:44",
                                "deleted_at": null
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessibile entity",
                        "examples": {
                            "application/json": {
                                "message": "The given data was invalid.",
                                "errors": {
                                    "name": [
                                        "The name has already been taken."
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Remove user",
                "description": "<strong>Permanently</strong> delete user account.\\\nSee <a href='#operation/disableUser'>Disable user</a>",
                "operationId": "removeUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X DELETE \\\n 'http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26' \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}'"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "examples": {
                            "application/json": null
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "examples": {
                            "application/json": {
                                "error": "Unknown user"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user}/profile": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update user profile",
                "description": "Update your own profile. \\\nSupports changing user account password. \\\nSee <a href='#operation/updateUser'>Update user</a>",
                "operationId": "updateUserProfile",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Full name",
                        "required": false,
                        "type": "string",
                        "example": "John Doe"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email address",
                        "required": false,
                        "type": "string",
                        "format": "email",
                        "example": "jdoe@example.com"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "description": "Existing user account password. \\\n<strong>Required if</strong> 'password' field is present.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "New user account password. Having at least; \n+ 8 characters, \n+ an upper case letter, \n+ a lower case letter, \n+ a number and, \n+ a symbol.",
                        "required": false,
                        "type": "string",
                        "pattern": "(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "description": "New password confirmation. \\\n<strong>Required with</strong> 'password' field.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X PUT \\\n 'http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26\/profile' \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}' \\\n -d 'name=Jane Doe' \\\n -d 'email=jdoe@example.com' \\\n -d 'current_password=N:x/6j^H' \\\n -d 'password=Gm=Pm5^(' \\\n -d 'password_confirmation=Gm=Pm5^('"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                "name": "Jane Doe",
                                "email": "jdoe@example.com",
                                "email_verified_at": "2018-10-14 12:42:30",
                                "created_at": "2018-10-14 12:42:31",
                                "updated_at": "2018-10-18 12:13:44",
                                "deleted_at": null
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessibile entity",
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "current_password": [
                                        "Wrong password"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user}/trash": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Disable user",
                "description": "<strong>Temporarily</strong> delete user account. \\\nSee <a href='#operation/removeUser'>Remove user</a>",
                "operationId": "disableUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X PUT \\\n 'http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26\/trash' \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                "name": "Jane Doe",
                                "email": "jdoe@example.com",
                                "email_verified_at": "2018-10-14 12:42:30",
                                "created_at": "2018-10-14 12:42:31",
                                "updated_at": "2018-10-18 13:53:15",
                                "deleted_at": "2018-10-18 13:53:15"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "examples": {
                            "application/json": {
                                "error": "Unknown user"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user}/restore": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Restore user",
                "description": "<strong>Enable</strong> previous <strike>disabled</strike> user account. \\\nSee <a href='#operation/disableUser'>Disable user</a>",
                "operationId": "restoreUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3dacedb2-b865-4192-87ed-0fc29ffefc26"
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X PUT \\\n 'http:\/\/localhost:8000\/api\/v1\/users\/3dacedb2-b865-4192-87ed-0fc29ffefc26\/restore' \\\n -H 'Accept: application\/json' \\\n -H 'Authorization: Bearer {ACCESS TOKEN}'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "examples": {
                            "application/json": {
                                "id": "3dacedb2-b865-4192-87ed-0fc29ffefc26",
                                "name": "Jane Doe",
                                "email": "jdoe@example.com",
                                "email_verified_at": "2018-10-14 12:42:30",
                                "created_at": "2018-10-14 12:42:31",
                                "updated_at": "2018-10-18 13:53:15",
                                "deleted_at": null
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "examples": {
                            "application/json": {
                                "error": "Unknown user"
                            }
                        }
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "tags": [
                    "oauth"
                ],
                "summary": "Request oauth token",
                "description": "Request for oauth token",
                "operationId": "requestToken",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "formData",
                        "description": "OAuth client APP ID",
                        "required": true,
                        "type": "string",
                        "format": "UUID"
                    },
                    {
                        "name": "client_secret",
                        "in": "formData",
                        "description": "OAuth client APP secret",
                        "required": true,
                        "type": "string",
                        "format": "UUID"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "ID of the user authorizing with token.",
                        "required": false,
                        "type": "string",
                        "format": "UUID"
                    },
                    {
                        "name": "grant_type",
                        "in": "formData",
                        "description": "ID of the user authorizing with token.",
                        "required": false,
                        "type": "string",
                        "format": "UUID",
                        "example": "980c5c87-01da-4a1a-b623-49d3692002b5"
                    },
                    {
                        "name": "grant_type",
                        "type": "string",
                        "enum": [
                            "authorization_code",
                            "client_credentials",
                            "password",
                            "refresh_token"
                        ],
                        "in": "formData",
                        "description": "",
                        "required": true
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "Authorization code. \\\n<strong>Required if</strong> grant_type is `authorization_code`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "formData",
                        "description": "Redirect URI. \\\n<strong>Required if</strong> grant_type is `authorization_code`.",
                        "required": false,
                        "type": "string",
                        "format": "URI"
                    },
                    {
                        "name": "refresh_token",
                        "in": "formData",
                        "description": "Refresh access token. \\\n<strong>Required if</strong> grant_type is `refresh_token`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "<strong>Required if</strong> grant_type is `password`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "<strong>Required if</strong> grant_type is `password`.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scopes",
                        "in": "formData",
                        "description": "Scopes the client APP is requesting.",
                        "required": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "CURL",
                        "source": "curl -X POST \\\n http:\/\/localhost:8000\/api\/v1\/oauth\/token \\\n -H 'Accept: application\/json' \\\n -H 'Content-Type: application\/json' \\\n -d '{\n    \"client_id\": \"3102c90b-1936-4968-af9e-3701bcc6147c\",\n    \"client_secret\": \"OZHF4AuWWvMY0rKC2VWwEMlvobJ4GfCgGKopdadQ\",\n    \"grant_type\": \"client_credentials\"\n }'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "examples": {
                            "application/json": {
                                "token_type": "Bearer",
                                "expires_in": 3600,
                                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGc..."
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessibile entity",
                        "examples": {
                            "application/json": {
                                "message": "The given data was invalid.",
                                "errors": {
                                    "client_id": [
                                        "The client id must be a valid UUID."
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Something went wrong."
                }
            }
        },
        "401ErrorResponse": {
            "message": "Unauthenticated."
        },
        "403ErrorResponse": {
            "message": "Insufficient Permission."
        },
        "422ErrorResponse": {
            "errors": {
                "email": [
                    "Wrong email or password."
                ]
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "User ID",
                    "type": "uuid",
                    "example": "0ac99f1b-482c-4af1-be28-ddace07eff20"
                },
                "name": {
                    "description": "User full name",
                    "type": "string",
                    "maxLength": 25,
                    "example": "John Doe"
                },
                "email": {
                    "description": "User email address",
                    "type": "string",
                    "format": "email",
                    "example": "jdoe@example.com"
                },
                "created_at": {
                    "description": "When user account was created",
                    "type": "datetime",
                    "example": "2018-09-30 15:32:06",
                    "x-nullable": true
                },
                "email_verified_at": {
                    "description": "When user account was verified",
                    "type": "datetime",
                    "example": "2018-09-30 15:35:42",
                    "x-nullable": true
                },
                "updated_at": {
                    "description": "When user account was last updated",
                    "type": "datetime",
                    "example": "2018-09-30 15:35:42",
                    "x-nullable": true
                },
                "deleted_at": {
                    "description": "When user account was deleted",
                    "type": "datetime",
                    "x-nullable": true
                }
            }
        }
    }
}
